Given css;
Do (di:);
a  di:_
Expect (expands the property);
  display:_

Do (m:a;);
a  m:a;
Expect (expands property and the value);
  margin: auto;

Do (margin:auto;);
a  margin:auto;
Expect (inserts a space after :);
  margin: auto;

Do (dib;);
a  dib;
Expect (expands a full statement after ;);
  display: inline-block;

Do (brad4);
a  brad4;
Expect (expands numeric values);
  border-radius: 4px;

Do (dib;<Enter>);
a  dib\<Enter>_
Expect (display: inline-block;);
  display: inline-block;
  _

Do (m:a; dib;<Enter>);
a  m:a; dib;
Expect (multiple statements don't stack on the same line);
  margin: auto; dib;

Do (123<Enter>):
  a  123\<Enter>_
Expect (safely lets enter through);
  123
  _

Do:
  a  p:before\<Enter>_
Expect (don't expand :before);
  p:before
  _

Do:
  a  p:before\<Enter>_
Expect (don't expand :before);
  p:before
  _

Do:
  a  di\<Tab>_
Expect (expands properties via tab);
  display: _

Do:
  a  m0a\<Tab>_
Expect (expands statements via tab);
  margin: 0 auto;_

Execute:
  set sts=2 sw=2 ex
Do:
  a  cursor:w{\<Enter>_
Expect (don't expand open braces);
  cursor:w{
    _

Execute:
  set sw=2
  set sts=2
  set ex
Do:
  a  margin: 0 auto\<Enter>_
Expect (automatic semicolon insertion);
  margin: 0 auto;
  _

Execute:
  set sw=2
  set sts=2
  set ex
Do:
  a  background: linear-gradient(\<Enter>_
Expect (supress automatic semicolon insertion):
    background: linear-gradient(
    _

Given css:
Execute:
  set sts=2 sw=2 ex
Do:
  a  xxxxxx\<Tab>_
Expect (keeps tabs working):
    xxxxxx  _
